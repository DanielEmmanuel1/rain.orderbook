name: "publish"

# This will trigger the action on each push to the `release` branch.
on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [
            macos-13,
            macos-14,
            ubuntu-22.04,
            # Someone who cares can make windows work.
            # windows-latest
          ]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4
      - uses: DeterminateSystems/magic-nix-cache-action@v2

      # - name: install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-20.04'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf pkg-config libssl-dev

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev build-essentials

      # Need to prebuild the sol artifacts so that rust can find them.
      - run: nix develop --command rainix-sol-prelude
      - run: nix develop --command rainix-rs-prelude

      - run: nix develop --command rainix-sol-prelude
        working-directory: lib/rain.interpreter
      - run: nix develop --command rainix-rs-prelude
        working-directory: lib/rain.interpreter
      - run: nix develop --command i9r-prelude
        working-directory: lib/rain.interpreter

      - run: nix develop .#tauri-shell --command ob-tauri-prelude

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        with:
          tauriScript: "nix develop .#tauri-shell --command cargo tauri"
          tagName: app-v__VERSION__-${{ github.sha }} # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App v__VERSION__-${{ github.sha }}"
          releaseBody: "See the assets to download this version and install."
