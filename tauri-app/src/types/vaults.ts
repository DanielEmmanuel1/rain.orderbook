/*
 Generated by typeshare 1.7.0
*/

export type BigDecimalString = string;

export type BigIntString = string;

export type BytesString = string;

export interface Account {
	id: BytesString;
}

export interface Erc20 {
	name: string;
	symbol: string;
	decimals: number;
	total_supply: BigIntString;
	total_supply_display: BigDecimalString;
}

export interface TokenVault {
	id: string;
	balance_display: BigDecimalString;
	balance: BigIntString;
	token: Erc20;
}

export interface Vault {
	id: string;
	owner: Account;
	token_vaults?: TokenVault[];
}

export interface VaultsQuery {
	vaults: Vault[];
}

export enum VaultOrderBy {
	Id = "Id",
	VaultId = "VaultId",
	Owner = "Owner",
	OwnerId = "OwnerId",
	TokenVaults = "TokenVaults",
	Deposits = "Deposits",
	Withdraws = "Withdraws",
}

